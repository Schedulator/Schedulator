@model Schedulator.Models.Program

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Program</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProgramId)

        <div class="form-group">
            @Html.LabelFor(model => model.ProgramName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProgramName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProgramName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProgramOption, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProgramOption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProgramOption, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreditsRequirement, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreditsRequirement, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreditsRequirement, "", new { @class = "text-danger" })
            </div>
        </div>


        <h4>Courses</h4>
        <hr />
            <table>
                <tr>
                    <th>Year 1 - Fall</th>
                </tr>
                <tr>
                    <th>Course Number</th>
                    <th>Course Name</th>
                    <th>Credit</th>
                </tr>
                @{
    var Year = 1;
    var Season = Schedulator.Models.Season.Fall;
                }

                @foreach (var item in Model.CourseSequences)
                {

                    if (item.Season != Season)
                    {
                        Year = item.Year;
                        Season = item.Season;

                        <tr>
                            <th>Year @item.Year - @item.Season</th>
                        </tr>
                        <tr>
                            <th>Course Number</th>
                            <th>Course Name</th>
                            <th>Credit</th>
                        </tr>
                    }
                    if (item.Course != null)
                    {
                        <tr>
                            <td>
                                
                                    <div class="col-md-10">
                                        @Html.EditorFor(x => item.Course.CourseNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(x => item.Course.CourseNumber, "", new { @class = "text-danger" })
                                    </div>
                                
                            </td>
                            <td>
                                    <div class="col-md-10">
                                        @Html.EditorFor(x => item.Course.Title, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(x => item.Course.Title, "", new { @class = "text-danger" })
                                    </div>
                            </td>
                            <td>
                                    <div class="col-md-10">
                                        @Html.EditorFor(x => item.Course.Credit, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(x => item.Course.Credit, "", new { @class = "text-danger" })
                                    </div>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <th>Elective Course</th>
                            <td>

                                    <div class="col-md-10">
                                        @Html.EditorFor(x => item.ElectiveType, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(x => item.ElectiveType, "", new { @class = "text-danger" })
                                    </div>
                            </td>
                        </tr>
                    }

                }
            </table>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
