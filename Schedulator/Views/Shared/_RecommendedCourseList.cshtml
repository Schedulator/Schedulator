@model Schedulator.Models.Program.RecommendCourseView
@using EnumExtension
<p>Recommended Courses For Program @Model.Program.ProgramName @Model.Program.ProgramSemester and @Model.Program.ProgramOption option:</p>

<div class="container">
    <div class="row">
        <div class="col-sm-4">
            <h4>Fall</h4>
            @if (Model.FallSchedule != null)
            {
                <p>Registered Courses</p>
                <ul class="course-list-recommend">
                    @foreach (Schedulator.Models.Enrollment enrollment in Model.FallSchedule.Enrollments)
                    {
                        <li><span class="label label-default">@enrollment.Course.CourseLetters @enrollment.Course.CourseNumber</span></li>
                    }
                </ul>

            }
            @if (Model.RecommendFallCourseSequence.Count() > 0)
            {
                <p>Recommended Courses</p>
                <ul class="course-list-recommend">
                    @foreach (Schedulator.Models.CourseSequence courseSequence in Model.RecommendFallCourseSequence)
                    {
                        if (courseSequence.Course != null)
                        {
                            <li><span class="label label-default">@courseSequence.Course.CourseLetters @courseSequence.Course.CourseNumber</span></li>
                        }
                        else if (courseSequence.OtherOptions.Count() > 0)
                        {
                            <li>
                                @foreach (Schedulator.Models.CourseSequence courseSequenceOtherOption in courseSequence.OtherOptions)
                                {
                                    if (courseSequenceOtherOption.Course == null)
                                    {
                                        <span class="label label-default">@courseSequenceOtherOption.ElectiveType.DisplayName()</span>
                                    }
                                    else
                                    { 
                                    <span class="label label-default">@courseSequenceOtherOption.Course.CourseLetters @courseSequenceOtherOption.Course.CourseNumber</span>
                                    }
                                }
                            </li>
                        }
                        else
                        {
                            <li><span class="label label-default">@courseSequence.ElectiveType.DisplayName()</span></li>
                        }
                    }

                </ul>

            }
        </div>

        <div class="col-sm-4">
            <h4>Winter</h4>
            @if (Model.WinterSchedule != null)
            {
                <p>Registered Courses</p>
                <ul class="course-list-recommend">
                    @foreach (Schedulator.Models.Enrollment enrollment in Model.WinterSchedule.Enrollments)
                    {
                        <li><span class="label label-default">@enrollment.Course.CourseLetters @enrollment.Course.CourseNumber</span></li>
                    }
                </ul>

            }
            @if (Model.RecommendWinterCourseSequence.Count() > 0)
            {
                <p>Recommended Courses</p>
                <ul class="course-list-recommend">
                    @foreach (Schedulator.Models.CourseSequence courseSequence in Model.RecommendWinterCourseSequence)
                    {
                        if (courseSequence.Course != null)
                        {
                            <li><span class="label label-default">@courseSequence.Course.CourseLetters @courseSequence.Course.CourseNumber</span></li>
                        }
                        else if (courseSequence.OtherOptions.Count() > 0)
                        {
                            <li>
                                @foreach (Schedulator.Models.CourseSequence courseSequenceOtherOption in courseSequence.OtherOptions)
                                {
                                    if (courseSequenceOtherOption.Course == null)
                                    {
                                        <span class="label label-default">@courseSequenceOtherOption.ElectiveType.DisplayName()</span>
                                    }
                                    else
                                    {
                                        <span class="label label-default">@courseSequenceOtherOption.Course.CourseLetters @courseSequenceOtherOption.Course.CourseNumber</span>
                                    }
                                }
                            </li>
                        }
                        else
                        {
                            <li><span class="label label-default">@courseSequence.ElectiveType.DisplayName()</span></li>
                        }
                    }

                </ul>

            }
        </div>
        <div class="col-sm-4">
            <h4>Summer</h4>
            @if (Model.SummerSchedules != null && Model.SummerSchedules.Count() > 0)
            {
                <p>Registered Courses</p>
                <ul class="course-list-recommend">
                    @foreach (Schedulator.Models.Schedule schedule in Model.SummerSchedules)
                    {
                        foreach (Schedulator.Models.Enrollment enrollment in schedule.Enrollments)
                        {
                            <li><span class="label label-default">@enrollment.Course.CourseLetters @enrollment.Course.CourseNumber</span></li>
                        }
                    }
                </ul>
            }
            @if (Model.RecommendSummerCourseSequence.Count() > 0)
            {
                <p>Recommended Courses</p>
                <ul class="course-list-recommend">
                    @foreach (Schedulator.Models.CourseSequence courseSequence in Model.RecommendSummerCourseSequence)
                    {
                        if (courseSequence.Course != null)
                        {
                            <li><span class="label label-default">@courseSequence.Course.CourseLetters @courseSequence.Course.CourseNumber</span></li>
                        }
                        else if (courseSequence.OtherOptions.Count() > 0 )
                        {
                            <li>
                                @foreach (Schedulator.Models.CourseSequence courseSequenceOtherOption in courseSequence.OtherOptions)
                                {
                                    if (courseSequenceOtherOption.Course == null)
                                    {
                                        <span class="label label-default">@courseSequenceOtherOption.ElectiveType.DisplayName()</span>
                                    }
                                    else
                                    {
                                        <span class="label label-default">@courseSequenceOtherOption.Course.CourseLetters @courseSequenceOtherOption.Course.CourseNumber</span>
                                    }
                                }
                            </li>
                        }
                        else
                        {
                            <li><span class="label label-default">@courseSequence.ElectiveType.DisplayName()</span></li>
                        }
                    }

                </ul>

            }
        </div>
    </div>
    <h6><i>Please Note:<br />
         The recommended Courses above are dynamically picked based on your current Course progression. <br/>
        The recommended Courses can be added to any semester as long as you have the required prequisites. <br />
        CO-OP Students should note that one or more of the semesters might be a work term so the recommended Courses should be taken in the following Semester.</i></h6>
</div>

