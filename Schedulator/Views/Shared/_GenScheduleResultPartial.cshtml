@model Schedulator.Models.ScheduleGenerator
@{
    var count = Model.CurrentPageNumber + 1;
}
@if (Model.PrequisitesStudentNeedsForCourses.Count() > 0)
{
    foreach (Schedulator.Models.ScheduleGenerator.PrequisitesStudentNeedsForCourse missingPrequisite in Model.PrequisitesStudentNeedsForCourses)
    {
        <div class="alert alert-danger">
            You do not have all the required prequisites for the Course @missingPrequisite.Course.CourseLetters @missingPrequisite.Course.CourseNumber <br />
            Missing Prequisites:
            <ul>
                @foreach (Schedulator.Models.Prerequisite prequisite in missingPrequisite.PrequisitesStudentNeeds)
                {
                    @prequisite.PrerequisiteCourse.CourseLetters 
                    @prequisite.PrerequisiteCourse.CourseNumber
                    if (prequisite.Concurrently)
                    {
                         @Html.Raw("Can take concurrently");
                    }
                }
            </ul>
        </div>
    }
}
@if (Model.Schedules != null && Model.Schedules.Count() > 0)
{
    <div class="alert alert-success">  @Model.NumberOfSchedules schedules were successfully generated.</div>

    foreach (List<Schedulator.Models.Schedule> schedule in Model.Schedules) {
        <div id="schedCount">#@count</div>
        count++;
        using (Ajax.BeginForm("RegisterSchedule", "ScheduleGenerator", null, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = count.ToString(), OnSuccess = "reloadCourseSequence" }, new { @class = "registerScheduleForm" }))
        {
        <!-- Schedules results -->
            <div id="@count.ToString()"></div><!-- EO #result -->
            <input type="submit"  name="register" class="btn btn-primary" value="Register">

            @Html.Partial("_ScheduleAndLegend", schedule)
        }
        <hr />
    }
}

